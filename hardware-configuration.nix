# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "xhci_pci" "thunderbolt" "nvme" "usb_storage" "sd_mod" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-intel" "cros_ec" "cros_ec_lpcs" ];
  boot.extraModulePackages = [ pkgs.linuxPackages.framework-laptop-kmod ];

  fileSystems."/" =
    { device = "/dev/disk/by-uuid/dc0ea2a9-2452-4f6a-929e-659b1014d004";
      fsType = "ext4";
    };

  boot.initrd.luks.devices."luks-513c2dc0-568b-47e4-94ec-69e6ae3fcd3f".device = "/dev/disk/by-uuid/513c2dc0-568b-47e4-94ec-69e6ae3fcd3f";

  fileSystems."/boot" =
    { device = "/dev/disk/by-uuid/3ADD-B0E9";
      fsType = "vfat";
      options = [ "fmask=0022" "dmask=0022" ];
    };

  swapDevices =
    [ { device = "/dev/disk/by-uuid/5acf429d-d399-4e46-a448-a89c0b5f1285"; }
    ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp166s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;

  hardware.graphics = {
    enable = true;
    extraPackages = with pkgs; [
      intel-media-driver
      intel-ocl
    ];
  };
}